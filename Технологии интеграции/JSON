Существует несколько основных сценариев использования JSON:

    Интеграция с внешними системами через их HTTP-интерфейсы: Google Calendar, Salesforce.com, REST-интерфейс «1С:Предприятия», SharePoint и т. д.
    Организация собственного HTTP-интерфейса прикладного решения.
    Обмен файлами JSON с внешними системами. Формирование конфигурационных, настроечных файлов. Использование их в процедурах обмена данными, например с интернет-магазинами.
    Использование файлов JSON для обмена данными между разными приложениями «1С:Предприятия».
    
JSON – это текстовый формат, поэтому данные в формате JSON могут содержать:

    Объект – неупорядоченное множество пар <имя свойства>:<значение>, заключенный в фигурные скобки ({}). Пары <имя свойства>:<значение> разделяются запятыми (,).
    Массив – множество значений. Массив заключается в квадратные скобки ([]). Значения разделяются запятыми (,).
    Значение – может быть строкой, числом, объектом, массивом или литералом true, false, null.
        Строка – набор символов, заключенный в двойные кавычки ("").
        Число – сериализуется с разделителем точка (.). Точность числа не ограничена.

Данные в формате JSON можно получать не только в виде файла, но и в виде строки. Например, при работе с HTTP-сервисами очень часто нужно работать с телом HTTP-запроса, которое представляет собой строку JSON. В таких случаях можно писать данные не в файл, а в строку. И потом подставлять эту строку в качестве тела HTTP-запроса. И, наоборот, брать строку, которая является телом HTTP-запроса, и читать из нее данные с помощью объекта ЧтениеJSON.

Для этого нужно использовать метод УстановитьСтроку() объектов ЗаписьJSON/ЧтениеJSON. После вызова этого метода для получения строки со сформированными данными JSON достаточно просто завершить запись документа методом Закрыть() объекта ЗаписьJSON.

Для табуляции: 
ПараметрыJSON = Новый ПараметрыЗаписиJSON(, Символы.Таб);
Запись = Новый ЗаписьJSON;
Запись.ОткрытьФайл("c:\temp\streamWrite.json", , , ПараметрыJSON);

Для потоковой работы предназначены объекты ЧтениеJSON и ЗаписьJSON.
    Запись = Новый ЗаписьJSON;
    Запись.ОткрытьФайл("c:\temp\streamWrite.json", , , Новый ПараметрыЗаписиJSON(, Символы.Таб));
    Запись.ЗаписатьНачалоОбъекта();
    Запись.ЗаписатьИмяСвойства("Код");
    Запись.ЗаписатьЗначение("000000017");
    Запись.ЗаписатьИмяСвойства("Телефоны");
    Запись.ЗаписатьНачалоМассива();
    Запись.ЗаписатьЗначение("8-999-777-55-33");
    Запись.ЗаписатьЗначение("+71112223344");
    Запись.ЗаписатьКонецМассива();
    Запись.ЗаписатьКонецОбъекта();
    Запись.Закрыть();
    
    {
        "Код": "000000017",
        "Телефоны": [
        "8-999-777-55-33",
        "+71112223344"
        ]
    }



Во многих случаях (например, при обмене информацией с внешними системами, чтении конфигурационных файлов в формате JSON и др.) проще и удобнее использовать так называемую объектную технику работы с JSON с помощью методов глобального контекста ПрочитатьJSON(), ЗаписатьJSON() и объектов ЧтениеJSON, ЗаписьJSON.
    Данные = Новый Структура;
    Данные.Вставить("Контрагент", "ОАО Топаз");
    Данные.Вставить("ОбъемПродаж", 5000000); 
    
    // Добавить элемент структуры Телефоны типа Массив.
    Телефоны = Новый Массив;
    Телефоны.Добавить("+71112223344");
    Телефоны.Добавить("+79998887766");
    Данные.Вставить("Телефоны", Телефоны);
    Данные.Вставить("Поставщик", Ложь);
    
     
    
    // Создать объект записи и открыть файл, в который будет выполняться запись.
    Запись = Новый ЗаписьJSON;
    ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
    Запись.ОткрытьФайл("c:\temp\Serialisation.json",,, ПараметрыЗаписиJSON);
    // Выполнить запись данных (Данные) с помощью объекта записи (Запись).
    ЗаписатьJSON(Запись, Данные);
    
    // Завершить работу с файлом.
    Запись.Закрыть();









