Главное что нужно запомнить - если учет товаров ведется в учете складов, а метод расчета себестоимости в учете всего предприятия не зависимо от складов, то для этого придется создавать новый регистр нокоплений, в котором и будем проводить расчет себестоимости. При этом при проведении документа по складам, нужно испльзовать новую методу проведения, а при расчете себестоимости, старую етодику проведения.

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетнаяПолитикаСрезПоследних.МетодРасчетаСебестоимости КАК МетодРасчетаСебестоимости
		|ИЗ
		|	РегистрСведений.УчетнаяПолитика.СрезПоследних(&Период, ) КАК УчетнаяПолитикаСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", Дата);	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбрана учетная политика";
		Сообщение.Сообщить();
		
		Возврат;
	КонецЕсли;
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	МетодРасчетаСебестоимости = ВыборкаДетальныеЗаписи.МетодРасчетаСебестоимости;
	
	
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество
		|ПОМЕСТИТЬ втТЧТовары
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|	И РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТЧТовары.Номенклатура КАК Номенклатура,
		|	втТЧТовары.Количество КАК Количество
		|ИЗ
		|	втТЧТовары КАК втТЧТовары";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ОстаткиНоменклатуры.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Склад = Склад;
		Движение.Количество = Выборка.Количество;
	КонецЦикла;
	
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	//выключение флага разделения итогов
	Движения.ОстаткиНоменклатуры.БлокироватьДляИзменения = Истина;
	Движения.Записать();
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ОстаткиНоменклатурыОстатки.Номенклатура.Представление КАК НоменклатураПредставление
		|ИЗ
		|	втТЧТовары КАК втТЧТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				&ГраницаТовара,
		|				Склад = &Склад
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							втТЧТовары.Номенклатура КАК Номенклатура
		|						ИЗ
		|							втТЧТовары КАК втТЧТовары)) КАК ОстаткиНоменклатурыОстатки
		|		ПО втТЧТовары.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
		|ГДЕ
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("ГраницаТовара", Новый Граница(МоментВремени(), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда		
		
		Отказ = Истина;
		Выборка = РезультатЗапроса.Выбрать();		
		Пока Выборка.Следующий() Цикл			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не хватает товара на скаладе - " + Склад + ", " + Выборка.НоменклатураПредставление + " - " + (- Выборка.КоличествоОстаток);
			Сообщение.Сообщить(); 		
		КонецЦикла; 
	КонецЕсли; 
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	
	//движение по регистру РасчетСебестоимости 
	Движения.РасчетСебестоимости.Записывать = Истина;
  	Движения.Записать();
  
	Движения.РасчетСебестоимости.Записывать = Истина;
	
	БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.РасчетСебестоимости");
	ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	БлокировкаДанных.Заблокировать();	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасчетСебестоимостиОстатки.Номенклатура КАК Номенклатура,
	               |	РасчетСебестоимостиОстатки.Партия КАК Партия,
	               |	РасчетСебестоимостиОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	РасчетСебестоимостиОстатки.СебестоимостьОстаток КАК СебестоимостьОстаток,
	               |	втТЧТовары.Количество КАК Количество,
	               |	РасчетСебестоимостиОстатки.Номенклатура.Представление КАК НоменклатураПредставление,
	               |	РасчетСебестоимостиОстатки.Партия.Представление КАК ПартияПредставление
	               |ИЗ
	               |	втТЧТовары КАК втТЧТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетСебестоимости.Остатки(
	               |				&МоментВремени,
	               |				Номенклатура В
	               |					(ВЫБРАТЬ
	               |						втТЧТовары.Номенклатура КАК Номенклатура
	               |					ИЗ
	               |						втТЧТовары КАК втТЧТовары)) КАК РасчетСебестоимостиОстатки
	               |		ПО втТЧТовары.Номенклатура = РасчетСебестоимостиОстатки.Номенклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номенклатура,
	               |	РасчетСебестоимостиОстатки.Партия.МоментВремени
	               |ИТОГИ
	               |	СУММА(КоличествоОстаток),
	               |	МАКСИМУМ(Количество)
	               |ПО
	               |	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Если МетодРасчетаСебестоимости = Перечисления.УчетнаяПолитика.ЛИФО Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасчетСебестоимостиОстатки.Партия.МоментВремени", 
												 "РасчетСебестоимостиОстатки.Партия.МоментВремени УБЫВ");
	КонецЕсли;
		
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстаток Тогда
			Отказ = Истина;
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не хватат товара: " + ВыборкаНоменклатура.НоменклатураПредставление + " - " + 
											(ВыборкаНоменклатура.Количество - ВыборкаНоменклатура.КоличествоОстаток);
			Сообщение.Сообщить();
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;		
	
		Выборка = ВыборкаНоменклатура.Выбрать();
	    НеобходимоСписать = ВыборкаНоменклатура.Количество;
		Пока Выборка.Следующий() И НеобходимоСписать > 0 Цикл
			СписаниеТовара = Мин(НеобходимоСписать, Выборка.КоличествоОстаток);
			
			Движение = Движения.РасчетСебестоимости.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход; 
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Партия = Выборка.Партия;
			Движение.Количество = СписаниеТовара;
			Если СписаниеТовара = Выборка.КоличествоОстаток Тогда
				Движение.Себестоимость = Выборка.СебестоимостьОстаток;		
			Иначе 
				Если Выборка.КоличествоОстаток = 0 Тогда
					Отказ = Истина;
					
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = СтрШаблон("Обнаружен нулевой остаток по партии %1", Выборка.ПартияПредставление);
					Сообщение.Сообщить();
					
					Прервать;
				КонецЕсли;
				
				Движение.Себестоимость = СписаниеТовара / Выборка.КоличествоОстаток * Выборка.СебестоимостьОстаток;	
			КонецЕсли;
			
			НеобходимоСписать = НеобходимоСписать - СписаниеТовара;
			
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры
